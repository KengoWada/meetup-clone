{
    "swagger": "2.0",
    "info": {
        "description": "API for MeetUp Clone",
        "title": "MeetUp Clone API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "license": {
            "name": "MIT License",
            "url": "https://opensource.org/license/mit"
        }
    },
    "basePath": "/v1",
    "paths": {
        "/auth/activate": {
            "patch": {
                "security": [],
                "description": "Activate a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Activate a user",
                "parameters": [
                    {
                        "description": "activate user payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.activateUserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user successfully activated",
                        "schema": {
                            "$ref": "#/definitions/response.DocsResponseMessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.DocsErrorResponse"
                        }
                    },
                    "422": {
                        "description": "Unprocessable Entity",
                        "schema": {
                            "$ref": "#/definitions/response.DocsResponseMessageOnly"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.DocsErrorResponseInternalServerErr"
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "security": [],
                "description": "Log in a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Log in a user",
                "parameters": [
                    {
                        "description": "log in payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.loginUserPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user successfully logged in",
                        "schema": {
                            "$ref": "#/definitions/response.DocsSuccessResponseLoginUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.DocsErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.DocsErrorResponseInternalServerErr"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "security": [],
                "description": "Register a user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Register a user",
                "parameters": [
                    {
                        "description": "register user payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.registerUserPayload"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.DocsSuccessResponseRegisterUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.DocsErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.DocsErrorResponseInternalServerErr"
                        }
                    }
                }
            }
        },
        "/auth/resend-verification-email": {
            "post": {
                "security": [],
                "description": "Resend verification email to user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Resend verification email to user",
                "parameters": [
                    {
                        "description": "resend verification email payload",
                        "name": "payload",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.resendVerificationEmailPayload"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "email sent if account exists",
                        "schema": {
                            "$ref": "#/definitions/response.DocsResponseMessageOnly"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.DocsErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.DocsErrorResponseInternalServerErr"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.activateUserPayload": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "auth.loginUserPayload": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "auth.registerUserPayload": {
            "type": "object",
            "required": [
                "dateOfBirth",
                "email",
                "password",
                "profilePic",
                "username"
            ],
            "properties": {
                "dateOfBirth": {
                    "type": "string",
                    "example": "mm/dd/yyyy"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "maxLength": 72,
                    "minLength": 10
                },
                "profilePic": {
                    "type": "string",
                    "example": "https://fake.link/img.png"
                },
                "username": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 3
                }
            }
        },
        "auth.resendVerificationEmailPayload": {
            "type": "object",
            "required": [
                "email"
            ],
            "properties": {
                "email": {
                    "type": "string"
                }
            }
        },
        "response.DocsErrorResponse": {
            "type": "object",
            "properties": {
                "errors": {
                    "type": "object",
                    "properties": {
                        "fieldName": {
                            "type": "string",
                            "example": "error message"
                        }
                    }
                },
                "message": {
                    "type": "string",
                    "example": "Invalid request body"
                }
            }
        },
        "response.DocsErrorResponseInternalServerErr": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "internal server error"
                }
            }
        },
        "response.DocsResponseMessageOnly": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "response.DocsSuccessResponseLoginUser": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object",
                    "properties": {
                        "token": {
                            "type": "string",
                            "example": "jwt.access.token"
                        }
                    }
                }
            }
        },
        "response.DocsSuccessResponseRegisterUser": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Done."
                }
            }
        }
    },
    "securityDefinitions": {
        "ApiKeyAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}